#include "types.h"
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

/*
 * Dumps the memory region in the range [addr, addr + len)
 *
 * @addr: start of the memory region to be dumped
 * @len: length of the memory region to be dumped
 */
void hexdump(void *addr, size_t len);

/*
 * Blocks until the user inputs a new line and tries to convert the input to a
 * 64-bit integer.
 *
 * @fmt: the format string to be displayed
 * return: a 64-bit value
 */
u64 input(const char *fmt, ...);

/*
 * Fancy wrappers of printf
 *
 * @fmt: format string
 */
void important(const char *fmt, ...);
void info(const char *fmt, ...);
void warn(const char *fmt, ...);
void error(const char *fmt, ...);

/*
 * Prints `msg` and exits with code 1 if `cond` is false (!= 0)
 *
 * @cond: condition to be checked
 * @msg: failure message
 */
void checkf(int cond, char *msg);

/*
 * Prints `msg` if `cond` is false (!= 0)
 *
 * @cond: condition to be checked
 * @msg: warning message
 */
i32 checkw(int cond, char *msg);

/*
 * Generates a string of sequential de Bruijn sequence chunks
 *
 * @buf: buffer for populating the result if not null. If the buffer is null, a
 * new chunk is malloc'ed
 * @size: the size of the string
 * @return: the pointer to the string
 */
char *cyclic(char *buf, int size);
